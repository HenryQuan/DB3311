#!/usr/bin/php
<?php

// include the common PHP code file
require("a2.php");

$usage = "Usage: $argv[0] Name1 Name2";
// Init connection with database
$db = dbConnect(DB_CONNECTION);

// Check arguments
if (count($argv) < 3) exit("$usage\n");

$name1 = $argv[1];
$name2 = $argv[2];
// Our job is to find all connections between them
$q = "with Origin as (select id from actor where lower(name) = lower('$name1')),
           MovieOne as (select A.movie_id from Acting as A, ActorOne as O where A.actor_id = O.id)";
$r = dbQuery($db, mkSQL($q));

with recursive Tree(parent_id, id, movie_id) as
(select O.id, A.id, M.id from Origin as O, Actor as A, Movie as M where O.id = A.actor_id, M.id = A.movie_id
union all
select t.parent_id, t.id, t.movie_id from 
)
select * from Tree;

$i = 1; // Number
while ($t = dbNext($r)) {
  echo "$i. $t[0] -- $t[1] (";
  if (!empty($t[2]))
    echo "$t[2], ";
  if (!empty($t[3]))
    echo "$t[3], ";
  if (!empty($t[4]))
    echo "$t[4]";
  echo ")\n";
  $i++;
}

/*
This is really important for this question

create or replace view Connection(A1, ID, A2) as
select F.actor_id, F.movie_id, S.actor_id from Acting as F, Acting as S
where F.movie_id = S.movie_id and F.actor_id != S.actor_id;
*/

?>
